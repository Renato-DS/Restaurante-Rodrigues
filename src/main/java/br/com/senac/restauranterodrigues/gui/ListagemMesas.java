/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.senac.restauranterodrigues.gui;

import br.com.senac.restauranterodrigues.persistencia.*;
import jakarta.persistence.EntityManager;
import jakarta.persistence.Query;
import jakarta.persistence.TypedQuery;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Renato Rodrigues
 */
public class ListagemMesas extends javax.swing.JFrame {   
    /**
     * Creates new form ListagemMesas
     */
    public ListagemMesas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnTelaInicial = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMesas = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        btnTelaInicial.setText("< Tela Inicial");
        btnTelaInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaInicialActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Listagem de mesas");

        btnAdicionar.setText("+");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setText("-");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        tblMesas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblMesas);

        btnNovo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnNovo.setText("Novo pedido");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAtualizar.setText("Atualizar pedido");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnFinalizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnFinalizar.setText("Finalizar pedido");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnTelaInicial)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRemover))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnNovo)
                                .addGap(18, 18, 18)
                                .addComponent(btnAtualizar)
                                .addGap(18, 18, 18)
                                .addComponent(btnFinalizar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTelaInicial)
                    .addComponent(jLabel1)
                    .addComponent(btnAdicionar)
                    .addComponent(btnRemover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnFinalizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNovo)
                        .addComponent(btnAtualizar)))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTelaInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaInicialActionPerformed
        TelaInicial TI = new TelaInicial();
        TI.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnTelaInicialActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        mesasBD mb = new mesasBD(); 
        this.preencheTabela(mb.listar());
    }//GEN-LAST:event_formWindowGainedFocus

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
    EntityManager em = JPAUtil.getEntityManager();
        Query query = em.createQuery("SELECT status FROM mesas WHERE id=(SELECT MAX(id) FROM mesas)");
        Object resultado = query.getSingleResult();
        String status = resultado.toString();
        if (!status.equals("OCUPADA")) {
    mesasBD mb = new mesasBD();
        Query query2 = em.createQuery("SELECT MAX(m.id) FROM mesas m");
        Object resultado2 = query2.getSingleResult();
        if (resultado2 != null) {            
            int id = (int) resultado2;            
            mb.remover(id);
        JOptionPane.showMessageDialog(null,"Mesa removida!");
        } else {
            JOptionPane.showMessageDialog(null,"Adicione uma mesa para poder remover!"); 
        } }
        else { JOptionPane.showMessageDialog(null,"Remoção inválida! Mesa ocupada"); }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
       mesas m = new mesas();
       mesasBD mb = new mesasBD(); 
        m.setStatus("DISPONIVEL");         
        mb.adicionar(m);
        JOptionPane.showMessageDialog(null,"Mesa adicionada!");
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
       pedidos p = new pedidos(); 
       pedidosBD PB = new pedidosBD();
       
      if (tblMesas.getSelectedRow() >= 0) {
          if (!tblMesas.getValueAt(tblMesas.getSelectedRow(), 1).equals("OCUPADA")) {
        String g = (String)tblMesas.getValueAt(tblMesas.getSelectedRow(), 0);
        int h = Integer.valueOf(g);
         p.setCpf_cliente(null);
         p.setMesas_id(h);
         p.setValor_total(0.00);
         p.setStatus("ABERTO");
         
      if (PB.cadastrar(p)) {           
       mesas m = new mesas();
       mesasBD MB = new mesasBD();
         m.setId(h);
         m.setStatus("OCUPADA");
         MB.atualizar(m);
      JOptionPane.showMessageDialog(null, "Pedido cadastrado com sucesso!");
       } } else{ JOptionPane.showMessageDialog(null, "Esta mesa já está ocupada! \nPor favor, escolha outra!"); } }
       else { JOptionPane.showMessageDialog(null, "Selecione uma mesa antes de cadastrar um pedido!"); }
      
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
       if (tblMesas.getSelectedRow() >= 0) {
        if (tblMesas.getValueAt(tblMesas.getSelectedRow(), 2) != null) { 
          String g = (String)tblMesas.getValueAt(tblMesas.getSelectedRow(), 2);
          int h = Integer.valueOf(g); 
          AtualizarPedido AP = new AtualizarPedido(h);
          AP.setVisible(true);
          dispose(); 
       } else { JOptionPane.showMessageDialog(null, "Não há um pedido em aberto nesta mesa!");} }
       else { JOptionPane.showMessageDialog(null, "Selecione uma mesa com pedido em aberto para atualizá-lo!"); }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
  if (tblMesas.getSelectedRow() >= 0) {
      String u = (String)tblMesas.getValueAt(tblMesas.getSelectedRow(), 2);      
     if (u != null) {
      int f = Integer.valueOf(u);
        FinalizarPedido FP = new FinalizarPedido(f);
        FP.setVisible(true);        
         }
     else { JOptionPane.showMessageDialog(null, "Não há um pedido em aberto nesta mesa!");} }
    else { JOptionPane.showMessageDialog(null, "Selecione uma mesa com um pedido aberto para finalizá-lo!"); } 
    }//GEN-LAST:event_btnFinalizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListagemMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListagemMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListagemMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListagemMesas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListagemMesas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnTelaInicial;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMesas;
    // End of variables declaration//GEN-END:variables
  
public void preencheTabela(List<mesas>Mesas){     
    EntityManager em = JPAUtil.getEntityManager();
    String columns[] = {"Id", "Status", "ID Pedido"};
    String dados[][] = new String[Mesas.size()][columns.length];
    TypedQuery<Integer> query = em.createQuery("SELECT p.id FROM pedidos p WHERE p.status = 'ABERTO' AND p.mesas_id = :novoValor", Integer.class);
   
     int f=0;
     try {
     for(mesas m: Mesas){         
      query.setParameter("novoValor", f+1);
       List<Integer> resultados = query.getResultList();
        Integer resultado = resultados.isEmpty() ? null : resultados.get(0);  
        String resultadoString = (resultado != null) ? resultado.toString() : null;
         dados[f] = new String[]{ 
          String.valueOf(m.getId()), 
          m.getStatus(),
          resultadoString
         };        
         f++;
        } } catch (Exception e) { e.printStackTrace(); }
      
    DefaultTableModel model = new DefaultTableModel(dados, columns);
    tblMesas.setModel(model);
    JPAUtil.closeEtityManager(); 
    }
}
